@page "/addToCart"
@using UniScentPerfumeManagementSystem.Services
@inject NavigationManager NavigationManager
@inject CartService CartService

<MudContainer MaxWidth="MaxWidth.Large">
    <MudPaper Class="pa-4">
        <!-- Cart Header -->
        <MudText Typo="Typo.h4" Class="mb-4">Your Cart (@CartService.GetCartItems().Count items)</MudText>

        <!-- Cart Items -->
        @foreach (var item in CartService.GetCartItems())
        {
            <div class="cart-item mb-6">
                <!-- Top Row: Image, Name, Remove Button -->
                <div class="d-flex align-center justify-space-between">
                    <!-- Perfume Image -->
                    <MudImage Src="@item.Perfume.PictureUrl" Class="perfume-image mr-4" />

                    <!-- Perfume Data (Middle Section) -->
                    <div style="flex-grow: 1;">
                        <!-- Bold Perfume Name -->
                        <MudText Typo="Typo.h5" Class="bold-perfume-name">@item.Perfume.Name</MudText>
                        <MudText Typo="Typo.body2">@item.Perfume.SizeML ml</MudText>
                        <div class="d-flex align-center mt-8">
                            <!-- Quantity Selector -->
                            <div class="quantity-container">
                                <button class="quantity-button decrease" @onclick="() => DecreaseQuantity(item.Perfume.Id)" disabled="@(item.Quantity <= 1)">
                                    -
                                </button>
                                <span class="quantity-value">@item.Quantity</span>
                                <button class="quantity-button increase" @onclick="() => IncreaseQuantity(item.Perfume.Id)">
                                    +
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Price and Remove Button -->
                    <div class="d-flex flex-column align-end">
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="() => RemoveFromCart(item.Perfume.Id)" Class="mb-9" />
                        <MudText Typo="Typo.subtitle2">$@(item.Perfume.Price * item.Quantity)</MudText>
                    </div>
                </div>
            </div>
        }

        <!-- Total Price -->
        <MudText Typo="Typo.h5" Class="mt-4">Total: $@CartService.GetTotalPrice()</MudText>

        <!-- Checkout Button -->
        <MudButton Variant="Variant.Filled" Color="Color.Success" Class="mt-4" OnClick="NavigateToCheckout">
            <MudIcon Icon="@Icons.Material.TwoTone.ShoppingCartCheckout" Size="Size.Medium" Class="mr-3" />
            Checkout
        </MudButton>
    </MudPaper>
</MudContainer>

<style>
    .cart-item {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 1rem;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .mr-4 {
        margin-right: 1.5rem; /* Add spacing between image and text */
    }

    .mt-4 {
        margin-top: 1rem; /* Add spacing for bottom row */
    }

    .perfume-image {
        width: 180px; /* Set desired width */
        height: 180px; /* Set desired height */
        object-fit: cover; /* Ensure the image scales properly without distortion */
        border-radius: 0; /* Ensure no circular shape */
    }

    /* Quantity Selector Styles */
    .quantity-container {
        display: flex;
        align-items: center;
        border: 2px solid #aaa; /* Lighter border around the container */
        border-radius: 4px; /* Rounded corners for the container */
        padding: 2px; /* Add padding inside the container */
    }

    .quantity-button {
        width: 32px;
        height: 32px;
        border: none;
        background-color: transparent; /* Transparent background */
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        transition: background-color 0.3s ease; /* Smooth hover effect */
    }

        .quantity-button:hover {
            background-color: #f0f0f0; /* Light gray background on hover */
        }

        .quantity-button:disabled {
            cursor: not-allowed;
            opacity: 0.5; /* Reduce opacity for disabled state */
        }

    .quantity-value {
        min-width: 32px;
        text-align: center;
        font-size: 1rem;
        font-weight: bold;
    }

    /* Custom Bold Styling for Perfume Name */
    .bold-perfume-name {
        font-weight: 700 !important; /* Extra bold */
        color: #333; /* Darker text for better contrast */
    }
</style>

@code {
    private void IncreaseQuantity(int perfumeId)
    {
        CartService.UpdateQuantity(perfumeId, 1); // Increment by 1
    }

    private void DecreaseQuantity(int perfumeId)
    {
        CartService.UpdateQuantity(perfumeId, -1); // Decrement by 1
    }

    private void RemoveFromCart(int perfumeId)
    {
        CartService.RemoveFromCart(perfumeId);
    }

    private void NavigateToCheckout()
    {
        NavigationManager.NavigateTo("/checkout"); // Redirect to the checkout page <button class="citation-flag" data-index="2">
    }
}