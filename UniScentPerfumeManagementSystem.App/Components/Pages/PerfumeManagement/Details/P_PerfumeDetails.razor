@page "/perfume-detail/{Id:int}"
@inject NavigationManager NavigationManager
@inject PerfumeService PerfumeService
@inject CartService CartService
@inject AuthenticationStateProvider AuthStateProvider
@inject ILogger<P_PerfumeDetails> _logger

<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        @if (isAuthenticated && perfume != null)
        {
            <MudItem xs="12" sm="6" md="6">
                <div style="border: 2px solid #ddd; border-radius: 8px; box-shadow: 0 4px 6px rgba(150, 150, 200, 0.3); padding: 8px; background-color: #fff;">
                    <MudCardMedia Image="@perfume.PictureUrl" Height="400" Style="object-fit: contain; width: 100%;" />
                </div>
            </MudItem>

            <MudItem xs="12" sm="6" md="6">
                <MudText Typo="Typo.h4" Style="font-weight: bold; text-align: center;">@perfume.Name</MudText>

                <div style="padding: 16px; background-color: #fff;">
                    <table style="width: 100%; border-collapse: collapse;">
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Name</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.Name</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Company</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.CompanyName</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Price</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">$@perfume.Price</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Category</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.Category</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Size</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.SizeML ml</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Longevity</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.Longevity</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Ingredients</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.KeyIngredients</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Notes</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.Notes</td>
                        </tr>
                        <tr>
                            <td style="width: 30%; font-weight: bold;">Description</td>
                            <td style="width: 5%;">-</td>
                            <td style="width: 65%;">@perfume.Description</td>
                        </tr>
                    </table>
                </div>

                <div style="padding: 16px; background-color: #fff;">
                    <MudButton Variant="Variant.Filled" Color="Color.Dark" Style="width: 100%; margin-top: 16px;" OnClick="() => AddToCart(perfume)">
                        <MudIcon Icon="@Icons.Material.TwoTone.AddShoppingCart" Size="Size.Medium" Style="margin-right: 0.8cm;" /> Add to Cart
                    </MudButton>
                </div>
            </MudItem>
        }
        else if (!isAuthenticated)
        {
            <MudText Typo="Typo.h5">Redirecting to login...</MudText>
        }
        else
        {
            <MudText Typo="Typo.h5">Loading...</MudText>
        }
    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public int Id { get; set; }

    private PerfumeDataModel perfume;
    private bool isAuthenticated = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                _logger.LogInformation("Loading perfume detail page for ID: {PerfumeId}", Id);

                var authState = await AuthStateProvider.GetAuthenticationStateAsync();
                isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;

                if (!isAuthenticated)
                {
                    _logger.LogWarning("User not authenticated. Redirecting to login.");
                    NavigationManager.NavigateTo("/login");
                    return;
                }

                var result = await PerfumeService.GetPerfumeById(Id);
                if (result.IsSuccess)
                {
                    perfume = result.Data.Perfume;
                    _logger.LogInformation("Successfully loaded perfume details for ID: {PerfumeId}. Name: {PerfumeName}", Id, perfume.Name);
                }
                else
                {
                    _logger.LogWarning("Failed to load perfume details for ID: {PerfumeId}. Error: {ErrorMessage}", Id, result.Message);
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An unexpected error occurred while loading perfume details for ID: {PerfumeId}", Id);
            }
            finally
            {
                StateHasChanged();
            }
        }
    }

    private void AddToCart(PerfumeDataModel perfume)
    {
        try
        {
            _logger.LogInformation("Adding perfume to cart. Perfume ID: {PerfumeId}, Name: {PerfumeName}", perfume.Id, perfume.Name);
            CartService.AddToCart(perfume);
            NavigationManager.NavigateTo("/addToCart");
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "An unexpected error occurred while adding perfume to cart. Perfume ID: {PerfumeId}", perfume.Id);
        }
    }
}