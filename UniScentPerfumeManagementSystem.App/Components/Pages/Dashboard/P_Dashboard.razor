@page "/dashboard"
@inject NavigationManager NavigationManager
@inject PerfumeService PerfumeService
@inject AuthenticationStateProvider AuthStateProvider
@inject ILogger<P_Dashboard> _logger

<MudContainer MaxWidth="MaxWidth.Large">
    <MudText Typo="Typo.h4" Style="font-weight: bold; text-align: center; margin-bottom: 16px;">
        Discover the Difference Between Designer and Niche Perfumes
    </MudText>
    <MudText Typo="Typo.body1" Style="text-align: justify; margin-bottom: 24px;">
        Designer perfumes are crafted by well-known fashion brands such as Chanel, Dior, or Gucci,
        focusing on mass appeal and accessibility. These fragrances are widely available in retail
        stores and are often more affordable due to their large-scale production. While they use
        quality ingredients, their primary focus is on brand recognition and marketing rather than
        exclusivity. On the other hand, niche perfumes are created by independent fragrance houses
        that prioritize creativity, uniqueness, and high-quality ingredients. These perfumes are typically
        produced in limited quantities, making them more exclusive and luxurious. Niche fragrances often
        feature rare or exotic components, offering a personalized and artistic olfactory experience that
        appeals to fragrance enthusiasts seeking something distinctive.
    </MudText>

    <MudText Typo="Typo.h4" Style="font-weight: bold; text-align: center; margin-bottom: 16px;">
        Understanding Fragrance Notes
    </MudText>
    <MudText Typo="Typo.body1" Style="text-align: justify; margin-bottom: 24px;">
        Perfumes are composed of three layers of scent notes, each contributing to the overall fragrance
        experience. The <strong>top notes</strong> are the first scents you smell when applying a perfume.
        They are light, fresh, and evaporate quickly, often featuring citrus, mint, or herbal elements.
        These notes serve as the "first impression" of the fragrance. As the top notes fade,
        the <strong>middle notes</strong> (also known as the "heart notes") emerge. These form the core of
        the fragrance and are often floral or spicy, such as rose, lavender, or cinnamon. Finally,
        the <strong>base notes</strong> are the longest-lasting scents that linger on your skin for hours.
        They provide depth and stability to the fragrance, often featuring rich and warm ingredients like
        vanilla, sandalwood, or musk. Understanding these layers helps you appreciate the complexity and
        evolution of a perfume over time.
    </MudText>

    <MudText Typo="Typo.h4" Style="font-weight: bold; text-align: center; margin-bottom: 16px;">
        Featured Designer Perfumes
    </MudText>
    <MudGrid>
        @if (featuredDesignerPerfumes != null && featuredDesignerPerfumes.Any())
        {
            @foreach (var perfume in featuredDesignerPerfumes)
            {
                <MudItem xs="12" sm="6" md="3">
                    <MudCard Elevation="25" Class="mb-4">
                        <div style="position: relative; cursor: pointer;" @onclick="@(() => NavigateToDetail(perfume.Id))">
                            <MudCardMedia Image="@perfume.PictureUrl" Height="200" />
                            <MudBadge Color="@(perfume.StockQuantity > 0 ? Color.Success : Color.Error)"
                                      Variant="Variant.Filled"
                                      Style="position: absolute; bottom: -3px; left: 4px; padding: 4px 8px; font-size: 0.8rem;"
                                      Content="@(perfume.StockQuantity > 0 ? "In Stock" : "Out of Stock")" />
                        </div>

                        <MudCardContent @onclick="@(() => NavigateToDetail(perfume.Id))" Style="cursor: pointer;">
                            <MudText Typo="Typo.subtitle2">@perfume.Name</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">@perfume.CompanyName</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Primary">$@perfume.Price</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        }
        else
        {
            <MudText Typo="Typo.h4">Loading...</MudText>
        }
    </MudGrid>

    <div style="text-align: center; margin-top: 16px;">
        <MudButton Class="rounded-pill-button" Variant="Variant.Filled" Color="Color.Dark" OnClick="NavigateToDesignerPage">
            <MudText Typo="Typo.body1">See More</MudText>
            <MudIcon Icon="@Icons.Material.TwoTone.MoreHoriz" Size="Size.Medium" Style="margin-left: 1cm;" />
        </MudButton>
    </div>

    <MudText Typo="Typo.h4" Style="font-weight: bold; text-align: center; margin-top: 32px; margin-bottom: 16px;">
        Featured Niche Perfumes
    </MudText>
    <MudGrid>
        @if (featuredNichePerfumes != null && featuredNichePerfumes.Any())
        {
            @foreach (var perfume in featuredNichePerfumes)
            {
                <MudItem xs="12" sm="6" md="3">
                    <MudCard Elevation="25" Class="mb-4">
                        <div style="position: relative; cursor: pointer;" @onclick="@(() => NavigateToDetail(perfume.Id))">
                            <MudCardMedia Image="@perfume.PictureUrl" Height="200" />
                            <MudBadge Color="@(perfume.StockQuantity > 0 ? Color.Success : Color.Error)"
                                      Variant="Variant.Filled"
                                      Style="position: absolute; bottom: -3px; left: 4px; padding: 4px 8px; font-size: 0.8rem;"
                                      Content="@(perfume.StockQuantity > 0 ? "In Stock" : "Out of Stock")" />
                        </div>

                        <MudCardContent @onclick="@(() => NavigateToDetail(perfume.Id))" Style="cursor: pointer;">
                            <MudText Typo="Typo.subtitle2">@perfume.Name</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">@perfume.CompanyName</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Primary">$@perfume.Price</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        }
        else
        {
            <MudText Typo="Typo.h4">Loading...</MudText>
        }
    </MudGrid>

    <div style="text-align: center; margin-top: 16px;">
        <MudButton Class="rounded-pill-button" Variant="Variant.Filled" Color="Color.Dark" OnClick="NavigateToNichePage">
            <MudText Typo="Typo.body1">See More</MudText>
            <MudIcon Icon="@Icons.Material.TwoTone.MoreHoriz" Size="Size.Medium" Style="margin-left: 1cm;" />
        </MudButton>
    </div>
</MudContainer>

@code {
    private List<PerfumeDataModel> featuredDesignerPerfumes = new();
    private List<PerfumeDataModel> featuredNichePerfumes = new();
    private UserSessionModel _userSession = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                _logger.LogInformation("Initializing dashboard page.");

                var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;

                var authState = await customAuthStateProvider.GetAuthenticationStateAsync();
                if (authState.User.Identity == null || !authState.User.Identity.IsAuthenticated)
                {
                    _logger.LogWarning("User not authenticated. Redirecting to login.");
                    NavigationManager.NavigateTo("/login");
                    return;
                }

                _userSession = await customAuthStateProvider.GetUserData();

                await LoadPerfumes();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An unexpected error occurred while initializing the dashboard page.");
            }
            finally
            {
                StateHasChanged();
            }
        }
    }

    private async Task LoadPerfumes()
    {
        try
        {
            _logger.LogInformation("Fetching featured designer perfumes.");

            var designerResult = await PerfumeService.GetPerfumesByCategory("Designer", new PageSettingModel { PageNo = 1, PageSize = 4 });
            if (designerResult.IsSuccess)
            {
                featuredDesignerPerfumes = designerResult.Data.PerfumeList;
                _logger.LogInformation("Successfully loaded {PerfumeCount} featured designer perfumes.", featuredDesignerPerfumes.Count);
            }
            else
            {
                _logger.LogWarning("Failed to load designer perfumes. Error: {ErrorMessage}", designerResult.Message);
            }
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "An unexpected error occurred while loading designer perfumes.");
        }

        try
        {
            _logger.LogInformation("Fetching featured niche perfumes.");

            var nicheResult = await PerfumeService.GetPerfumesByCategory("Niche", new PageSettingModel { PageNo = 1, PageSize = 4 });
            if (nicheResult.IsSuccess)
            {
                featuredNichePerfumes = nicheResult.Data.PerfumeList;
                _logger.LogInformation("Successfully loaded {PerfumeCount} featured niche perfumes.", featuredNichePerfumes.Count);
            }
            else
            {
                _logger.LogWarning("Failed to load niche perfumes. Error: {ErrorMessage}", nicheResult.Message);
            }
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "An unexpected error occurred while loading niche perfumes.");
        }
    }

    private void NavigateToDetail(int id)
    {
        try
        {
            _logger.LogInformation("Navigating to perfume detail page for perfume ID: {PerfumeId}", id);
            NavigationManager.NavigateTo($"/perfume-detail/{id}");
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "An unexpected error occurred while navigating to perfume detail page.");
        }
    }

    private void NavigateToDesignerPage()
    {
        try
        {
            _logger.LogInformation("Navigating to designer perfumes page.");
            NavigationManager.NavigateTo("/designer");
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "An unexpected error occurred while navigating to the designer perfumes page.");
        }
    }

    private void NavigateToNichePage()
    {
        try
        {
            _logger.LogInformation("Navigating to niche perfumes page.");
            NavigationManager.NavigateTo("/niche");
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "An unexpected error occurred while navigating to the niche perfumes page.");
        }
    }
}